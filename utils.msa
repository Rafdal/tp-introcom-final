*************************************************************************
*	UTILITIES			utils.msa			*
*************************************************************************
	p68h11

	public delay,clear,copiado
	extern clrdis,bitmap
	extern coor1,coor2,turn,disp,titan1,titan2,canhun1,canhun2

$macros.def

	rseg	CODE



*####################################
*-	T O    D O 
*####################################
*
*	Revisar si meter en utils.msa y el problema de la cosntantes
*
*******************************************************************************************************************
*
* 	Subrutina copiado: Copia el contenido de una matriz a al Bitmap
*		- Recibe por X la posición de incio del tablero por copiar
*		- Hace uso de las constantes definidas en el programa para definir el tamaño de las 
*		matrices (FIL y COL)
*
*******************************************************************************************************************
copiado	equ	*
	
	%BACKUP
	
	ldy	#bitmap			; Cargo en Y la primer celda de la matriz destino
	ldab	#36			; Defino un contador de la cantidad de valores a copiar

sgte	ldaa	0,X			; Copio el contenido de la celda apuntada a la celda destino 
	staa	0,Y			; correspondiente.
	
	inx				; Apunto a las siguientes celdas de origen y destino
	iny				
	decb				; Decremento el contador y compruebo si terminé
	bne	sgte

	%RESTORE

	rts



*********************************************************
*		SUBRUTINA delay				*
*							*
* Esta subrutina genera un delay de aprox 0.5 - 1s para	*
* simluador del wookie					*
* No recibe ningún parámetro ni retorna valores, no 	*
* hace falta liberar el stack depués de invocarla	*
*********************************************************

delay	equ	*
	pshx			Hago backup de los registros	(4 ciclos)
	pshy							(5 ciclos)
	psha							(3 ciclos)
	pshb							(3 ciclos)
	ldaa	#18		Cargo la cantidad de repeticiones que haré con el loop1. (23 ciclos)
*								[TOTAL:17]

*	[LOOP1]: n recorridos del loop1 lleva n*(9+T) ciclos, siendo T los ciclos en total del loop2. 
loop1	ldy	#$D900		Cargo la cantidad de repeticiones que haré con el loop2. (4 ciclos)

* 	[LOOP2]: Un solo recorrido del loop2 lleva 9 ciclos, 55552 ($D900) recorridos del loop2 lleva 499968 ciclos
loop2	nop			retardo 		(2 ciclos)
	dey			decremento Y 		(4 ciclos)
	bne	loop2		salto si no es cero 	(3 ciclos)
*							[TOTAL:9]

	deca			decremento A	(2 ciclos)
	bne	loop1		si A!=0, repito (3 ciclos)


	ldy	#$12		Retardo 			(5 ciclos)
	pulb			Recupero el valor 		(4 ciclos)
	pula			de los	registros		(4 ciclos)
	puly							(6 ciclos)
	pulx							(5 ciclos)
	rts			Retorno de la rubrutina		(5 ciclos)
*								[TOTAL:29]





*****************************************************************************************
* 
*	Clear: vacía todas las posiciones de memoria utilizadas para almacenar variables
* 
*****************************************************************************************
clear	equ	*

	clr	coor1
	clr	coor2
	clr	turn
	clr	disp
	clr	titan1
	clr	titan2
	clr	canhun1	
	clr	canhun2		; vaciamos la memoria
	jsr	clrdis		; vaciamos el display
	
	rts





	END